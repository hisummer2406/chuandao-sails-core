// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package handler

import (
	"net/http"

	chd "chuandao-sails-core/apps/platform-gateway/api/internal/handler/chd"
	sf "chuandao-sails-core/apps/platform-gateway/api/internal/handler/sf"
	uu "chuandao-sails-core/apps/platform-gateway/api/internal/handler/uu"
	"chuandao-sails-core/apps/platform-gateway/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/health",
				Handler: healthHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HTTPLogMiddleware, serverCtx.SignMiddleware},
			[]rest.Route{
				{
					// 加小费
					Method:  http.MethodPost,
					Path:    "/platform/callback/overflow/addOnlineFee",
					Handler: chd.ChdAddOnlineFeeHandler(serverCtx),
				},
				{
					// 订单取消
					Method:  http.MethodPost,
					Path:    "/platform/callback/overflow/cancel",
					Handler: chd.ChdCancelHandler(serverCtx),
				},
				{
					// 订单创建
					Method:  http.MethodPost,
					Path:    "/platform/callback/overflow/create",
					Handler: chd.ChdCreateHandler(serverCtx),
				},
				{
					// 查询订单
					Method:  http.MethodPost,
					Path:    "/platform/callback/overflow/getOrder",
					Handler: chd.ChdGetOrderHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HTTPLogMiddleware},
			[]rest.Route{
				{
					// 加小费
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/add_online_fee",
					Handler: sf.SfAddOnlineFeeHandler(serverCtx),
				},
				{
					// 预取消
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/before_cancel",
					Handler: sf.SfBeforeCancelHandler(serverCtx),
				},
				{
					// 订单取消
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/cancel",
					Handler: sf.SfCancelHandler(serverCtx),
				},
				{
					// 订单创建
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/create",
					Handler: sf.SfCreateHandler(serverCtx),
				},
				{
					// 询价
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/getPrice",
					Handler: sf.SfGetPriceHandler(serverCtx),
				},
				{
					// 查看骑手位置
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/get_shipper_location",
					Handler: sf.SfGetShipperLocationHandler(serverCtx),
				},
				{
					// 发布订单
					Method:  http.MethodPost,
					Path:    "/platform/sf/overflow/publishDown",
					Handler: sf.SfPublishDownHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HTTPLogMiddleware, serverCtx.SignMiddleware},
			[]rest.Route{
				{
					// 加小费
					Method:  http.MethodPost,
					Path:    "/platform/callback/uuQuotation/addOnlineFee",
					Handler: uu.UuAddOnlineFeeHandler(serverCtx),
				},
				{
					// 取消订单
					Method:  http.MethodPost,
					Path:    "/platform/callback/uuQuotation/cancel",
					Handler: uu.UuCancelHandler(serverCtx),
				},
				{
					// 接收订单
					Method:  http.MethodPost,
					Path:    "/platform/callback/uuQuotation/create",
					Handler: uu.UuCreateHandler(serverCtx),
				},
				{
					// 订单回推
					Method:  http.MethodPost,
					Path:    "/platform/callback/uuQuotation/retry",
					Handler: uu.UuRetryHandler(serverCtx),
				},
				{
					// 订单详情
					Method:  http.MethodPost,
					Path:    "/platform/v1/order/detail",
					Handler: uu.UuDetailHandler(serverCtx),
				},
			}...,
		),
	)
}
