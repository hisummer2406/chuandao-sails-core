// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: platform.proto

package platformclient

import (
	"context"

	"chuandao-sails-core/apps/platform-gateway/rpc/platform"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetPlatformConfigReq  = platform.GetPlatformConfigReq
	GetPlatformConfigResp = platform.GetPlatformConfigResp

	Platform interface {
		// 获取平台配置
		GetPlatformConfig(ctx context.Context, in *GetPlatformConfigReq, opts ...grpc.CallOption) (*GetPlatformConfigResp, error)
	}

	defaultPlatform struct {
		cli zrpc.Client
	}
)

func NewPlatform(cli zrpc.Client) Platform {
	return &defaultPlatform{
		cli: cli,
	}
}

// 获取平台配置
func (m *defaultPlatform) GetPlatformConfig(ctx context.Context, in *GetPlatformConfigReq, opts ...grpc.CallOption) (*GetPlatformConfigResp, error) {
	client := platform.NewPlatformClient(m.cli.Conn())
	return client.GetPlatformConfig(ctx, in, opts...)
}
